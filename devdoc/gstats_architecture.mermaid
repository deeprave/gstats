graph LR
    %% Input Layer
    CLI["`**gstats CLI**
    Command Line Interface`"]
    REPO["`**Git Repository**
    Local/Remote Repository`"]
    
    %% Core Components
    CLI --> CORE["`**Core Engine**
    - Argument Parsing
    - Configuration Management
    - Error Handling`"]
    
    CORE --> GITACCESS["`**Git Access Layer**
    - Repository Detection
    - Git History Reading
    - Branch/Tag Analysis`"]
    
    GITACCESS --> REPO
    
    %% Statistics Gathering
    GITACCESS --> STATS["`**Statistics Collector**
    Raw Data Extraction`"]
    
    %% Module System
    CORE --> MODLOADER["`**Module Loader**
    Dynamic Plugin System`"]
    
    MODLOADER --> MOD1["`**commits**
    • Commit frequency
    • Timing patterns
    • Message analysis`"]
    
    MODLOADER --> MOD2["`**contributors**
    • Author activity
    • Lines changed
    • File ownership`"]
    
    MODLOADER --> MOD3["`**metrics**
    • File size trends
    • Language breakdown
    • Churn rate`"]
    
    MODLOADER --> MOD4["`**branches**
    • Branch lifespans
    • Merge patterns
    • Hotspots`"]
    
    MODLOADER --> MOD5["`**quality**
    • Complexity metrics
    • Technical debt
    • Refactoring trends`"]
    
    %% Data Processing
    STATS --> PROCESSOR["`**Data Processor**
    - Aggregation
    - Filtering
    - Normalization`"]
    
    MOD1 --> PROCESSOR
    MOD2 --> PROCESSOR
    MOD3 --> PROCESSOR
    MOD4 --> PROCESSOR
    MOD5 --> PROCESSOR
    
    %% Output System
    PROCESSOR --> FORMATTER["`**Output Formatter**
    Format Selection & Generation`"]
    
    %% Text Formats
    FORMATTER --> CSV["`**CSV**
    Tabular Data
    (Default)`"]
    
    FORMATTER --> JSON["`**JSON**
    Structured Data`"]
    
    FORMATTER --> XML["`**XML**
    Hierarchical Data`"]
    
    FORMATTER --> MD["`**Markdown**
    Documentation Format`"]
    
    FORMATTER --> TXT["`**Plain Text**
    Summary Reports`"]
    
    FORMATTER --> HTML["`**HTML**
    Interactive Reports`"]
    
    %% Chart Formats
    FORMATTER --> CHARTGEN["`**Chart Generator**
    Visualization Engine`"]
    
    CHARTGEN --> SVG["`**SVG Charts**
    • Scalable Vector Graphics
    • Interactive Elements
    • Web-friendly`"]
    
    CHARTGEN --> PNG["`**PNG Charts**
    • Raster Graphics
    • High Resolution
    • Print-ready`"]
    
    %% Styling
    classDef input fill:#e1f5fe
    classDef core fill:#f3e5f5
    classDef module fill:#e8f5e8
    classDef output fill:#fff3e0
    classDef chart fill:#ffebee
    
    class CLI,REPO input
    class CORE,GITACCESS,STATS,PROCESSOR,MODLOADER core
    class MOD1,MOD2,MOD3,MOD4,MOD5 module
    class FORMATTER,CSV,JSON,XML,MD,TXT,HTML output
    class CHARTGEN,SVG,PNG chart